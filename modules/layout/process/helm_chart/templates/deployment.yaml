apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  namespace: {{ .Values.service.namespace }}
  labels:
    app: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicas.min }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
    spec:
      nodeSelector: 
        node_pool: "{{ .Values.nodeSelector.node }}"
      tolerations:
        - key: "node"
          value: "{{ .Values.nodeSelector.node }}"
          effect: "NoSchedule"
      initContainers:
      - name: wait-for-cache
        image: {{ .Values.busybox.repository }}:{{ .Values.busybox.tag }}
        imagePullPolicy: "{{ .Values.busybox.pull }}"
        command: ['sh', '-c', "until nc -z {{ .Values.dependencies.cache }}; do echo waiting for cache; sleep 2; done"]
      - name: wait-for-file-storage
        image: {{ .Values.busybox.repository }}:{{ .Values.busybox.tag }}
        imagePullPolicy: "{{ .Values.busybox.pull }}"
        command: ['sh', '-c', "until nc -z {{ .Values.dependencies.file }}; do echo waiting for file storage; sleep 2; done"]
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pull }}"
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        workingDir: /app
        command:
          - /bin/sh
          - -c
          - |
            export PYTHONPATH=/app && supervisord -c /app/supervisord.conf
        securityContext:
          runAsUser: {{ .Values.securityContext.runAsUser }}
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ps aux | grep 'document.celery_process.app' | grep -v grep || exit 1
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ps aux | grep 'document.celery_process.app' | grep -v grep || exit 1
          initialDelaySeconds: 10
          periodSeconds: 30
        {{- if not .Values.local }}
        resources:
          limits:
            cpu: "{{ .Values.resources.limits.cpu }}"
            memory: "{{ .Values.resources.limits.memory }}"
          requests:
            cpu: "{{ .Values.resources.requests.cpu }}"
            memory: "{{ .Values.resources.requests.memory }}"
        {{- end }}
        volumeMounts:
        - name: config-volume
          mountPath: /app/config.py
          subPath: config.py
        - name: credentials-volume
          mountPath: /app/credentials.json
          subPath: credentials.json
        - name: supervisord-volume
          mountPath: /app/supervisord.conf
          subPath: supervisord.conf
      volumes:
      - name: config-volume
        configMap:
          name: layout-config-py-map
      - name: credentials-volume
        configMap:
          name: layout-ocr-credentials-map
      - name: supervisord-volume
        configMap:
          name: {{ .Values.service.name }}-supervisord-conf-map